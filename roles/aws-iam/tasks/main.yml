---
- name: assert iam config
  assert:
    that:
    - aws_iam_region is string
    - aws_iam_region | length > 0
    msg: IAM is misconfigured.


- name: fetch aws caller info
  aws_caller_info:
  register: aws_caller_info_outout

- name: set aws account id
  set_fact:
    set_account_id: "{{ aws_caller_info_outout.account }}"

- name: manage iam policies
  block:
  - name: setup async queue
    set_fact:
      async_output_results: []

  - include_tasks: iam_policies.yml
    loop: "{{ aws_iam_policies }}"
    loop_control:
      loop_var: iam_policy

  - name: sync status
    async_status:
      jid: "{{ item.ansible_job_id }}"
    when: item.ansible_job_id is defined
    loop: "{{ async_output_results | d([]) }}"
    register: async_poll_output
    retries: 10
    delay: 2
    until: async_poll_output is finished

  always:
  - name: clear async queue
    set_fact:
      async_output_results: []

  tags:
  - iam-policy


- name: manage iam users
  block:
  - name: setup async queue
    set_fact:
      async_output_results: []

  - include_tasks: iam_users.yml
    loop: "{{ aws_iam_users }}"
    loop_control:
      loop_var: iam_user

  - name: sync status
    async_status:
      jid: "{{ item.ansible_job_id }}"
    when: item.ansible_job_id is defined
    loop: "{{ async_output_results | d([]) }}"
    register: async_poll_output
    retries: 10
    delay: 2
    until: async_poll_output is finished

  always:
  - name: clear async queue
    set_fact:
      async_output_results: []

  tags:
  - iam-user


- name: manage iam groups
  block:
  - name: setup async queue
    set_fact:
      async_output_results: []

  - include_tasks: iam_groups.yml
    loop: "{{ aws_iam_groups }}"
    loop_control:
      loop_var: iam_group

  - name: sync status
    async_status:
      jid: "{{ item.ansible_job_id }}"
    when: item.ansible_job_id is defined
    loop: "{{ async_output_results | d([]) }}"
    register: async_poll_output
    retries: 10
    delay: 2
    until: async_poll_output is finished

  always:
  - name: clear async queue
    set_fact:
      async_output_results: []

  tags:
  - iam-group


- name: manage iam roles
  block:
  - name: setup async queue
    set_fact:
      async_output_results: []

  - include_tasks: iam_roles.yml
    loop: "{{ aws_iam_roles }}"
    loop_control:
      loop_var: iam_role

  - name: sync status
    async_status:
      jid: "{{ item.ansible_job_id }}"
    when: item.ansible_job_id is defined
    loop: "{{ async_output_results | d([]) }}"
    register: async_poll_output
    retries: 10
    delay: 2
    until: async_poll_output is finished

  always:
  - name: clear async queue
    set_fact:
      async_output_results: []

  tags:
  - iam-role
