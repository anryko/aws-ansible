---
- name: assert iam config
  assert:
    that:
    - aws_iam_vpc is mapping
    - aws_iam_vpc.region is string
    - aws_iam_vpc.region | length > 5
    - aws_iam_srv is mapping
    msg: IAM is misconfigured.
  tags:
  - always


- name: create iam managed policies from yaml
  iam_managed_policy:
    state: present
    policy_name: "{{ item.name }}"
    policy_description: "{{ item.description | d('automated policy') }}"
    policy: >-
      {{
        aws_iam_policy_yaml_default
          | combine(item.yaml)
          | to_json
      }}  # str
    only_version: True
  when: item.yaml is defined
  loop: "{{ aws_iam_policies }}"

- name: create iam managed policies from template
  iam_managed_policy:
    state: present
    policy_name: "{{ item.name }}"
    policy_description: "{{ item.description | d('automated policy') }}"
    policy: >-
      {{
        lookup(
          'template',
          item.template.src + '.json.j2',
          template_vars=dict(tmpl=item.template.vars)
        )
      }}  # str
    only_version: True
  when: item.template is defined
  loop: "{{ aws_iam_policies }}"


- name: resolve and cache kms key to id map
  block:
  - name: discover kms key arns from aliases
    aws_kms_info:
      region: "{{ aws_iam_vpc.region }}"
      filters:
        alias: "{{ item }}"
    when: not item.startswith('arn:')
    loop: >
      {{
        aws_iam_users
          | union(aws_iam_roles)
          | json_query('[].kms[].key_alias')
          | unique
      }}
    register: aws_kms_info_output

  - name: assert discovered key arns
    assert:
      that:
      - item is mapping
      - item['keys'] is sequence
      - item['keys'] | length == 1
      - item['keys'][0] is mapping
      - item['keys'][0].key_arn is defined
      - item['keys'][0].key_arn is string
      - item['keys'][0].key_arn.startswith('arn:aws:kms:' + aws_iam_vpc.region)
      msg: "KMS key '{{ item.item | d('null') }}' is misconfigured."
    loop: "{{ aws_kms_info_output.results }}"

  - name: set kms key alias to arn map
    set_fact:
      set_kms_key_alias_to_arn_map: >
        {{
          set_kms_key_alias_to_arn_map | d({})
            | combine(
                {item.item: item['keys'][0].key_arn}
              )
        }}
    when: item.item not in (set_kms_key_alias_to_arn_map | d({}))
    loop: "{{ aws_kms_info_output.results }}"

  when: >
    (
      aws_iam_users is sequence
      and aws_iam_users | length > 0
    ) or (
      aws_iam_roles is sequence
      and aws_iam_roles | length > 0
    )
  tags:
  - iam-user
  - iam-role
  - iam-role-kms


- include_tasks: iam_users.yml
  loop: "{{ aws_iam_users }}"
  loop_control:
    loop_var: iam_user
  tags:
  - iam-user

- include_tasks: iam_groups.yml
  loop: "{{ aws_iam_groups }}"
  loop_control:
    loop_var: iam_group
  tags:
  - iam-group

- include_tasks: iam_roles.yml
  loop: "{{ aws_iam_roles }}"
  loop_control:
    loop_var: iam_role
  tags:
  - iam-role
  - iam-role-kms
