# NOTE:
# - iam_kms is passed with include
# - set_kms_target is coming from upper scope
# - set_kms_key_alias_to_arn_map comes from upper scope (main.yml)

- name: assert iam target kms config
  assert:
    that:
    - set_kms_target is defined
    - set_kms_target is mapping
    - set_kms_target.name is defined
    - set_kms_target.name | length > 0
    - iam_kms is defined
    - iam_kms is mapping
    - iam_kms.key_alias is defined
    - iam_kms.key_alias | length > 0
    msg: IAM target or KMS are misconfigured.

- name: "{{ set_kms_target.name }} > set target kms defaults"
  set_fact:
    set_kms: >
      {{
        aws_iam_role_kms_default
        | combine(iam_kms, recursive=True)
        | combine({'name': set_kms_target.name})
      }}  # Dict

- name: "{{ set_kms.name }} > print kms settings"
  debug:
    var: set_kms
    verbosity: 2

- name: "{{ set_kms.name }} > grant access to {{ set_kms.key_alias }} kms key"
  aws_kms:
    region: "{{ set_kms.region }}"
    key_arn: "{{ set_kms_key_alias_to_arn_map[set_kms.key_alias] }}"
    mode: grant
    role_name: >-
      {{
        set_kms.name
        if not set_kms.name.startswith('arn:aws:')
        else omit
      }}
    role_arn: >-
      {{
        set_kms.name
        if set_kms.name.startswith('arn:aws:')
        else omit
      }}
    grant_types: "{{ set_kms.grant_types }}"
  when: set_kms.is_allowed is sameas True
  register: aws_kms_grant_output
  retries: 3
  delay: 3
  until: >
    aws_kms_grant_output is succeeded
    or 'referenced before assignment' in aws_kms_grant_output.msg
  failed_when: >
    aws_kms_grant_output is failed
    and aws_kms_grant_output.msg is defined
    and 'referenced before assignment' not in aws_kms_grant_output.msg

- name: "{{ set_kms.name }} > deny access to {{ set_kms.key_alias }} kms key"
  aws_kms:
    region: "{{ set_kms.region }}"
    key_arn: "{{ set_kms_key_arn }}"
    mode: deny
    role_name: >-
      {{
        set_kms.name
        if not set_kms.name.startswith('arn:aws:')
        else omit
      }}
    role_arn: >-
      {{
        set_kms.name
        if set_kms.name.startswith('arn:aws:')
        else omit
      }}
  when: set_kms.is_allowed is sameas False
  register: aws_kms_deny_output
  failed_when: >
    aws_kms_deny_output is failed
    and aws_kms_deny_output.msg is defined
    and 'referenced before assignment' not in aws_kms_deny_output.msg
