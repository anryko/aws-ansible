---
- name: check env
  hosts: localhost
  gather_facts: False
  tags:
  - always

  tasks:
  - name: assert playbook vars
    assert:
      that:
      - market is defined
      - env is defined
      msg: >
        You must provide -e '
        market=[us|lt|...]
        env=[dev|stg|prd|...]'


- name: aws infrastructure
  hosts: localhost
  connection: local
  gather_facts: False

  pre_tasks:
  - name: setup vars
    block:
    - name: set dynamic import paths
      set_fact:
        vpc_conf_path:
          ../market/{{ market }}/config/{{ env }}/infra.yml:infra.vpc
        vpc_scrt_path:
          ../market/{{ market }}/secret/{{ env }}/infra.yml:infra.secrets

    - name: load configs from files and template
      set_fact:
        vpc_conf: >
          {{
            lookup(
              'tmpl_files',
              vpc_conf_path,
              vpc_scrt_path
            )
          }}  # Dict

    - name: print yaml config
      debug:
        verbosity: 3
        msg: "{{ (vpc_conf | to_nice_yaml).split('\n') }}"

    - name: assert prepared vars
      assert:
        that:
        - vpc_conf is mapping
        - vpc_conf.market == market
        - vpc_conf.env == env
        - vpc_conf.region is defined
        - vpc_conf.region is string
        - vpc_conf.region | length > 5
        - not '{?' in vpc_conf | to_json
        - not '{!' in vpc_conf | to_json
        msg: VPC template is misconfigured.

    tags:
    - always

  roles:
  - name: aws-vpc
    vpc_srv: "{{ vpc_conf }}"
    tags:
    - vpc-infra

  - name: aws-s3
    aws_s3_vpc: "{{ vpc_conf }}"
    aws_s3_srv: "{{ vpc_conf.s3 }}"
    when: vpc_conf.s3 is defined
    tags:
    - vpc-s3

  - name: aws-iam
    aws_iam_vpc: "{{ vpc_conf }}"
    aws_iam_srv: >
      {{
        {
          'policies': vpc_conf.s3 | json_query('[].iam.policies') | flatten,
          'groups': vpc_conf.s3 | json_query('[].iam.groups') | flatten,
          'roles': vpc_conf.s3 | json_query('[].iam.roles') | flatten,
          'users': vpc_conf.s3 | json_query('[].iam.users') | flatten
        }
      }}  # Dict[str, List]
    when: vpc_conf.s3 is defined
    tags:
    - vpc-s3
    - vpc-iam

  - name: aws-iam
    aws_iam_vpc: "{{ vpc_conf }}"
    aws_iam_srv: "{{ vpc_conf.iam }}"
    when: vpc_conf.iam is defined
    tags:
    - vpc-iam

  - name: aws-kms
    aws_kms_vpc: "{{ vpc_conf }}"
    aws_kms_srv: "{{ vpc_conf.kms }}"
    when: vpc_conf.kms is defined
    tags:
    - vpc-kms

  - name: aws-sg
    aws_sg_vpc: "{{ vpc_conf }}"
    aws_sg_srv: "{{ vpc_conf.security_groups }}"
    when: vpc_conf.security_groups is defined
    tags:
    - vpc-sg

  - name: aws-volume
    aws_vol_vpc: "{{ vpc_conf }}"
    aws_vol_srv: "{{ vpc_conf.ebs_volumes }}"
    aws_snap_srv: "{{ vpc_conf.ebs_snapshots }}"
    when: >
      vpc_conf.ebs_volumes is defined
      or vpc_conf.ebs_snapshots is defined
    tags:
    - vpc-ebs
